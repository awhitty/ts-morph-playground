{"version":3,"file":"sb-f53856b5.js","sources":["../../../../node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: \"'\"\r\n    },\r\n    brackets: [\r\n        ['(', ')'],\r\n        ['[', ']'],\r\n        ['If', 'EndIf'],\r\n        ['While', 'EndWhile'],\r\n        ['For', 'EndFor'],\r\n        ['Sub', 'EndSub']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] }\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.sb',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { token: 'delimiter.array', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        // Special bracket statement pairs\r\n        { token: 'keyword.tag-if', open: 'If', close: 'EndIf' },\r\n        { token: 'keyword.tag-while', open: 'While', close: 'EndWhile' },\r\n        { token: 'keyword.tag-for', open: 'For', close: 'EndFor' },\r\n        { token: 'keyword.tag-sub', open: 'Sub', close: 'EndSub' }\r\n    ],\r\n    keywords: [\r\n        'Else',\r\n        'ElseIf',\r\n        'EndFor',\r\n        'EndIf',\r\n        'EndSub',\r\n        'EndWhile',\r\n        'For',\r\n        'Goto',\r\n        'If',\r\n        'Step',\r\n        'Sub',\r\n        'Then',\r\n        'To',\r\n        'While'\r\n    ],\r\n    tagwords: ['If', 'Sub', 'While', 'For'],\r\n    operators: ['>', '<', '<>', '<=', '>=', 'And', 'Or', '+', '-', '*', '/', '='],\r\n    // we include these common regular expressions\r\n    identifier: /[a-zA-Z_][\\w]*/,\r\n    symbols: /[=><:+\\-*\\/%\\.,]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // classes\r\n            [/(@identifier)(?=[.])/, 'type'],\r\n            // identifiers, tagwords, and keywords\r\n            [\r\n                /@identifier/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@operators': 'operator',\r\n                        '@default': 'variable.name'\r\n                    }\r\n                }\r\n            ],\r\n            // methods, properties, and events\r\n            [\r\n                /([.])(@identifier)/,\r\n                {\r\n                    cases: {\r\n                        $2: ['delimiter', 'type.member'],\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            // numbers\r\n            [/\\d*\\.\\d+/, 'number.float'],\r\n            [/\\d+/, 'number'],\r\n            // delimiters and operators\r\n            [/[()\\[\\]]/, '@brackets'],\r\n            [\r\n                /@symbols/,\r\n                {\r\n                    cases: {\r\n                        '@operators': 'operator',\r\n                        '@default': 'delimiter'\r\n                    }\r\n                }\r\n            ],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/(\\').*$/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"C?/, 'string', '@pop']\r\n        ]\r\n    }\r\n};\r\n"],"names":[],"mappings":"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"}