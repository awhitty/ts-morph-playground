{"version":3,"file":"coffee-5d6c1bcc.js","sources":["../../../../node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        blockComment: ['###', '###'],\r\n        lineComment: '#'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*#region\\\\b'),\r\n            end: new RegExp('^\\\\s*#endregion\\\\b')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.coffee',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n    ],\r\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\r\n    keywords: [\r\n        'and',\r\n        'or',\r\n        'is',\r\n        'isnt',\r\n        'not',\r\n        'on',\r\n        'yes',\r\n        '@',\r\n        'no',\r\n        'off',\r\n        'true',\r\n        'false',\r\n        'null',\r\n        'this',\r\n        'new',\r\n        'delete',\r\n        'typeof',\r\n        'in',\r\n        'instanceof',\r\n        'return',\r\n        'throw',\r\n        'break',\r\n        'continue',\r\n        'debugger',\r\n        'if',\r\n        'else',\r\n        'switch',\r\n        'for',\r\n        'while',\r\n        'do',\r\n        'try',\r\n        'catch',\r\n        'finally',\r\n        'class',\r\n        'extends',\r\n        'super',\r\n        'undefined',\r\n        'then',\r\n        'unless',\r\n        'until',\r\n        'loop',\r\n        'of',\r\n        'by',\r\n        'when'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/\\@[a-zA-Z_]\\w*/, 'variable.predefined'],\r\n            [\r\n                /[a-zA-Z_]\\w*/,\r\n                {\r\n                    cases: {\r\n                        this: 'variable.predefined',\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            // Comments\r\n            [/###/, 'comment', '@comment'],\r\n            [/#.*$/, 'comment'],\r\n            // regular expressions\r\n            ['///', { token: 'regexp', next: '@hereregexp' }],\r\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\r\n            [/(\\()(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\r\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\=)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\[)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\r\n            [/(\\!)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\&)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\|)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\?)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\{)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\r\n            [/(\\;)(\\s*)(@regEx)/, ['', '', 'regexp']],\r\n            // delimiters\r\n            [\r\n                /}/,\r\n                {\r\n                    cases: {\r\n                        '$S2==interpolatedstring': {\r\n                            token: 'string',\r\n                            next: '@pop'\r\n                        },\r\n                        '@default': '@brackets'\r\n                    }\r\n                }\r\n            ],\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[,.]/, 'delimiter'],\r\n            // strings:\r\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\r\n            [/'''/, 'string', \"@herestring.'''\"],\r\n            [\r\n                /\"/,\r\n                {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\"' }\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /'/,\r\n                {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: \"@string.'\" }\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        string: [\r\n            [/[^\"'\\#\\\\]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [\r\n                /#{/,\r\n                {\r\n                    cases: {\r\n                        '$S2==\"': {\r\n                            token: 'string',\r\n                            next: 'root.interpolatedstring'\r\n                        },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /[\"']/,\r\n                {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/#/, 'string']\r\n        ],\r\n        herestring: [\r\n            [\r\n                /(\"\"\"|''')/,\r\n                {\r\n                    cases: {\r\n                        '$1==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/[^#\\\\'\"]+/, 'string'],\r\n            [/['\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\r\n            [/#/, 'string']\r\n        ],\r\n        comment: [\r\n            [/[^#]+/, 'comment'],\r\n            [/###/, 'comment', '@pop'],\r\n            [/#/, 'comment']\r\n        ],\r\n        hereregexp: [\r\n            [/[^\\\\\\/#]+/, 'regexp'],\r\n            [/\\\\./, 'regexp'],\r\n            [/#.*$/, 'comment'],\r\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\r\n            [/\\//, 'regexp']\r\n        ]\r\n    }\r\n};\r\n"],"names":[],"mappings":"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"}