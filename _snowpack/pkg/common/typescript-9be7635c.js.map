{"version":3,"file":"typescript-9be7635c.js","sources":["../../../../node_modules/monaco-editor/esm/vs/basic-languages/typescript/typescript.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { languages } from '../fillers/monaco-editor-core.js';\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    onEnterRules: [\r\n        {\r\n            // e.g. /** | */\r\n            beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n            afterText: /^\\s*\\*\\/$/,\r\n            action: {\r\n                indentAction: languages.IndentAction.IndentOutdent,\r\n                appendText: ' * '\r\n            }\r\n        },\r\n        {\r\n            // e.g. /** ...|\r\n            beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n            action: {\r\n                indentAction: languages.IndentAction.None,\r\n                appendText: ' * '\r\n            }\r\n        },\r\n        {\r\n            // e.g.  * ...|\r\n            beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n            action: {\r\n                indentAction: languages.IndentAction.None,\r\n                appendText: '* '\r\n            }\r\n        },\r\n        {\r\n            // e.g.  */|\r\n            beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n            action: {\r\n                indentAction: languages.IndentAction.None,\r\n                removeText: 1\r\n            }\r\n        }\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\r\n        { open: '`', close: '`', notIn: ['string', 'comment'] },\r\n        { open: '/**', close: ' */', notIn: ['string'] }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*//\\\\s*#?region\\\\b'),\r\n            end: new RegExp('^\\\\s*//\\\\s*#?endregion\\\\b')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    // Set defaultToken to invalid to see what you do not tokenize yet\r\n    defaultToken: 'invalid',\r\n    tokenPostfix: '.ts',\r\n    keywords: [\r\n        // Should match the keys of textToKeywordObj in\r\n        // https://github.com/microsoft/TypeScript/blob/master/src/compiler/scanner.ts\r\n        'abstract',\r\n        'any',\r\n        'as',\r\n        'asserts',\r\n        'bigint',\r\n        'boolean',\r\n        'break',\r\n        'case',\r\n        'catch',\r\n        'class',\r\n        'continue',\r\n        'const',\r\n        'constructor',\r\n        'debugger',\r\n        'declare',\r\n        'default',\r\n        'delete',\r\n        'do',\r\n        'else',\r\n        'enum',\r\n        'export',\r\n        'extends',\r\n        'false',\r\n        'finally',\r\n        'for',\r\n        'from',\r\n        'function',\r\n        'get',\r\n        'if',\r\n        'implements',\r\n        'import',\r\n        'in',\r\n        'infer',\r\n        'instanceof',\r\n        'interface',\r\n        'is',\r\n        'keyof',\r\n        'let',\r\n        'module',\r\n        'namespace',\r\n        'never',\r\n        'new',\r\n        'null',\r\n        'number',\r\n        'object',\r\n        'package',\r\n        'private',\r\n        'protected',\r\n        'public',\r\n        'readonly',\r\n        'require',\r\n        'global',\r\n        'return',\r\n        'set',\r\n        'static',\r\n        'string',\r\n        'super',\r\n        'switch',\r\n        'symbol',\r\n        'this',\r\n        'throw',\r\n        'true',\r\n        'try',\r\n        'type',\r\n        'typeof',\r\n        'undefined',\r\n        'unique',\r\n        'unknown',\r\n        'var',\r\n        'void',\r\n        'while',\r\n        'with',\r\n        'yield',\r\n        'async',\r\n        'await',\r\n        'of'\r\n    ],\r\n    operators: [\r\n        '<=',\r\n        '>=',\r\n        '==',\r\n        '!=',\r\n        '===',\r\n        '!==',\r\n        '=>',\r\n        '+',\r\n        '-',\r\n        '**',\r\n        '*',\r\n        '/',\r\n        '%',\r\n        '++',\r\n        '--',\r\n        '<<',\r\n        '</',\r\n        '>>',\r\n        '>>>',\r\n        '&',\r\n        '|',\r\n        '^',\r\n        '!',\r\n        '~',\r\n        '&&',\r\n        '||',\r\n        '??',\r\n        '?',\r\n        ':',\r\n        '=',\r\n        '+=',\r\n        '-=',\r\n        '*=',\r\n        '**=',\r\n        '/=',\r\n        '%=',\r\n        '<<=',\r\n        '>>=',\r\n        '>>>=',\r\n        '&=',\r\n        '|=',\r\n        '^=',\r\n        '@'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    digits: /\\d+(_+\\d+)*/,\r\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n    regexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\r\n    regexpesc: /\\\\(?:[bBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [[/[{}]/, 'delimiter.bracket'], { include: 'common' }],\r\n        common: [\r\n            // identifiers and keywords\r\n            [\r\n                /[a-z_$][\\w$]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ],\r\n            [/[A-Z][\\w\\$]*/, 'type.identifier'],\r\n            // [/[A-Z][\\w\\$]*/, 'identifier'],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // regular expression: ensure it is terminated before beginning (otherwise it is an opeator)\r\n            [\r\n                /\\/(?=([^\\\\\\/]|\\\\.)+\\/([gimsuy]*)(\\s*)(\\.|;|,|\\)|\\]|\\}|$))/,\r\n                { token: 'regexp', bracket: '@open', next: '@regexp' }\r\n            ],\r\n            // delimiters and operators\r\n            [/[()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/!(?=([^=]|$))/, 'delimiter'],\r\n            [\r\n                /@symbols/,\r\n                {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            // numbers\r\n            [/(@digits)[eE]([\\-+]?(@digits))?/, 'number.float'],\r\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?/, 'number.float'],\r\n            [/0[xX](@hexdigits)n?/, 'number.hex'],\r\n            [/0[oO]?(@octaldigits)n?/, 'number.octal'],\r\n            [/0[bB](@binarydigits)n?/, 'number.binary'],\r\n            [/(@digits)n?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string_double'],\r\n            [/'/, 'string', '@string_single'],\r\n            [/`/, 'string', '@string_backtick']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@jsdoc'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment']\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        jsdoc: [\r\n            [/[^\\/*]+/, 'comment.doc'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/[\\/*]/, 'comment.doc']\r\n        ],\r\n        // We match regular expression quite precisely\r\n        regexp: [\r\n            [\r\n                /(\\{)(\\d+(?:,\\d*)?)(\\})/,\r\n                ['regexp.escape.control', 'regexp.escape.control', 'regexp.escape.control']\r\n            ],\r\n            [\r\n                /(\\[)(\\^?)(?=(?:[^\\]\\\\\\/]|\\\\.)+)/,\r\n                ['regexp.escape.control', { token: 'regexp.escape.control', next: '@regexrange' }]\r\n            ],\r\n            [/(\\()(\\?:|\\?=|\\?!)/, ['regexp.escape.control', 'regexp.escape.control']],\r\n            [/[()]/, 'regexp.escape.control'],\r\n            [/@regexpctl/, 'regexp.escape.control'],\r\n            [/[^\\\\\\/]/, 'regexp'],\r\n            [/@regexpesc/, 'regexp.escape'],\r\n            [/\\\\\\./, 'regexp.invalid'],\r\n            [\r\n                /(\\/)([gimsuy]*)/,\r\n                [{ token: 'regexp', bracket: '@close', next: '@pop' }, 'keyword.other']\r\n            ]\r\n        ],\r\n        regexrange: [\r\n            [/-/, 'regexp.escape.control'],\r\n            [/\\^/, 'regexp.invalid'],\r\n            [/@regexpesc/, 'regexp.escape'],\r\n            [/[^\\]]/, 'regexp'],\r\n            [\r\n                /\\]/,\r\n                {\r\n                    token: 'regexp.escape.control',\r\n                    next: '@pop',\r\n                    bracket: '@close'\r\n                }\r\n            ]\r\n        ],\r\n        string_double: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, 'string', '@pop']\r\n        ],\r\n        string_single: [\r\n            [/[^\\\\']+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/'/, 'string', '@pop']\r\n        ],\r\n        string_backtick: [\r\n            [/\\$\\{/, { token: 'delimiter.bracket', next: '@bracketCounting' }],\r\n            [/[^\\\\`$]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/`/, 'string', '@pop']\r\n        ],\r\n        bracketCounting: [\r\n            [/\\{/, 'delimiter.bracket', '@bracketCounting'],\r\n            [/\\}/, 'delimiter.bracket', '@pop'],\r\n            { include: 'common' }\r\n        ]\r\n    }\r\n};\r\n"],"names":[],"mappings":"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"}