{"version":3,"file":"javascript-53b6cfb4.js","sources":["../../../../node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { conf as tsConf, language as tsLanguage } from '../typescript/typescript.js';\r\nexport var conf = tsConf;\r\nexport var language = {\r\n    // Set defaultToken to invalid to see what you do not tokenize yet\r\n    defaultToken: 'invalid',\r\n    tokenPostfix: '.js',\r\n    keywords: [\r\n        'break',\r\n        'case',\r\n        'catch',\r\n        'class',\r\n        'continue',\r\n        'const',\r\n        'constructor',\r\n        'debugger',\r\n        'default',\r\n        'delete',\r\n        'do',\r\n        'else',\r\n        'export',\r\n        'extends',\r\n        'false',\r\n        'finally',\r\n        'for',\r\n        'from',\r\n        'function',\r\n        'get',\r\n        'if',\r\n        'import',\r\n        'in',\r\n        'instanceof',\r\n        'let',\r\n        'new',\r\n        'null',\r\n        'return',\r\n        'set',\r\n        'super',\r\n        'switch',\r\n        'symbol',\r\n        'this',\r\n        'throw',\r\n        'true',\r\n        'try',\r\n        'typeof',\r\n        'undefined',\r\n        'var',\r\n        'void',\r\n        'while',\r\n        'with',\r\n        'yield',\r\n        'async',\r\n        'await',\r\n        'of'\r\n    ],\r\n    typeKeywords: [],\r\n    operators: tsLanguage.operators,\r\n    symbols: tsLanguage.symbols,\r\n    escapes: tsLanguage.escapes,\r\n    digits: tsLanguage.digits,\r\n    octaldigits: tsLanguage.octaldigits,\r\n    binarydigits: tsLanguage.binarydigits,\r\n    hexdigits: tsLanguage.hexdigits,\r\n    regexpctl: tsLanguage.regexpctl,\r\n    regexpesc: tsLanguage.regexpesc,\r\n    tokenizer: tsLanguage.tokenizer\r\n};\r\n"],"names":["tsConf","tsLanguage"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AAEU,IAAC,IAAI,GAAGA,OAAO;AACf,IAAC,QAAQ,GAAG;AACtB;AACA,IAAI,YAAY,EAAE,SAAS;AAC3B,IAAI,YAAY,EAAE,KAAK;AACvB,IAAI,QAAQ,EAAE;AACd,QAAQ,OAAO;AACf,QAAQ,MAAM;AACd,QAAQ,OAAO;AACf,QAAQ,OAAO;AACf,QAAQ,UAAU;AAClB,QAAQ,OAAO;AACf,QAAQ,aAAa;AACrB,QAAQ,UAAU;AAClB,QAAQ,SAAS;AACjB,QAAQ,QAAQ;AAChB,QAAQ,IAAI;AACZ,QAAQ,MAAM;AACd,QAAQ,QAAQ;AAChB,QAAQ,SAAS;AACjB,QAAQ,OAAO;AACf,QAAQ,SAAS;AACjB,QAAQ,KAAK;AACb,QAAQ,MAAM;AACd,QAAQ,UAAU;AAClB,QAAQ,KAAK;AACb,QAAQ,IAAI;AACZ,QAAQ,QAAQ;AAChB,QAAQ,IAAI;AACZ,QAAQ,YAAY;AACpB,QAAQ,KAAK;AACb,QAAQ,KAAK;AACb,QAAQ,MAAM;AACd,QAAQ,QAAQ;AAChB,QAAQ,KAAK;AACb,QAAQ,OAAO;AACf,QAAQ,QAAQ;AAChB,QAAQ,QAAQ;AAChB,QAAQ,MAAM;AACd,QAAQ,OAAO;AACf,QAAQ,MAAM;AACd,QAAQ,KAAK;AACb,QAAQ,QAAQ;AAChB,QAAQ,WAAW;AACnB,QAAQ,KAAK;AACb,QAAQ,MAAM;AACd,QAAQ,OAAO;AACf,QAAQ,MAAM;AACd,QAAQ,OAAO;AACf,QAAQ,OAAO;AACf,QAAQ,OAAO;AACf,QAAQ,IAAI;AACZ,KAAK;AACL,IAAI,YAAY,EAAE,EAAE;AACpB,IAAI,SAAS,EAAEC,UAAU,CAAC,SAAS;AACnC,IAAI,OAAO,EAAEA,UAAU,CAAC,OAAO;AAC/B,IAAI,OAAO,EAAEA,UAAU,CAAC,OAAO;AAC/B,IAAI,MAAM,EAAEA,UAAU,CAAC,MAAM;AAC7B,IAAI,WAAW,EAAEA,UAAU,CAAC,WAAW;AACvC,IAAI,YAAY,EAAEA,UAAU,CAAC,YAAY;AACzC,IAAI,SAAS,EAAEA,UAAU,CAAC,SAAS;AACnC,IAAI,SAAS,EAAEA,UAAU,CAAC,SAAS;AACnC,IAAI,SAAS,EAAEA,UAAU,CAAC,SAAS;AACnC,IAAI,SAAS,EAAEA,UAAU,CAAC,SAAS;AACnC;;;;"}